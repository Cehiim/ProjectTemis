{"ast":null,"code":"var _jsxFileName = \"/Users/davidpessoa/Documents/Faculdade/Lab. Engenharia de Software/ProjectTemis/Front-end/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LangflowClient from './LangflowClient';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const applicationToken = 'AstraCS:gPMthwSCPXlJgTescaMBPySM:1ec7f2f52fe7b9c35b3f8495a2a29d84604f96373138fd76f09a175222b99cd7';\n  const langflowClient = new LangflowClient('https://api.langflow.astra.datastax.com', applicationToken);\n  const handleSend = async () => {\n    const trimmedInput = userInput.trim();\n    if (trimmedInput) {\n      addMessage(trimmedInput, 'user');\n      setUserInput('');\n      try {\n        const botResponse = await getBotResponse(trimmedInput);\n        addMessage(botResponse, 'bot');\n      } catch (error) {\n        addMessage(\"[Erro]\", 'bot');\n      }\n    }\n  };\n  const addMessage = (content, sender) => {\n    setMessages(prevMessages => [...prevMessages, {\n      content,\n      sender\n    }]);\n  };\n  const getBotResponse = async userMessage => {\n    const flowIdOrName = '68344e2d-b57a-4992-b172-214aca3fcaa1';\n    const langflowId = 'efde00ae-4d32-4471-8e8d-26482560f5a9';\n    const inputType = 'chat';\n    const outputType = 'chat';\n    const stream = false; // Defina como false se você não precisar de streaming\n\n    const tweaks = {}; // Ajuste os tweaks conforme necessário\n\n    const response = await langflowClient.runFlow(flowIdOrName, langflowId, userMessage, inputType, outputType, tweaks, stream);\n    if (response && response.outputs) {\n      const flowOutputs = response.outputs[0];\n      const firstComponentOutputs = flowOutputs.outputs[0];\n      return firstComponentOutputs.outputs.message.text;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      style: {\n        maxHeight: '400px',\n        overflowY: 'auto'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"K0oX757VKCMKA8zy3I1tPoQS6gk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","LangflowClient","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","Chat","_s","userInput","setUserInput","messages","setMessages","applicationToken","langflowClient","handleSend","trimmedInput","trim","addMessage","botResponse","getBotResponse","error","content","sender","prevMessages","userMessage","flowIdOrName","langflowId","inputType","outputType","stream","tweaks","response","runFlow","outputs","flowOutputs","firstComponentOutputs","message","text","children","id","style","maxHeight","overflowY","map","msg","index","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/davidpessoa/Documents/Faculdade/Lab. Engenharia de Software/ProjectTemis/Front-end/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport LangflowClient from './LangflowClient';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nfunction Chat() {\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const applicationToken = 'AstraCS:gPMthwSCPXlJgTescaMBPySM:1ec7f2f52fe7b9c35b3f8495a2a29d84604f96373138fd76f09a175222b99cd7';\n    const langflowClient = new LangflowClient('https://api.langflow.astra.datastax.com', applicationToken);\n\n    const handleSend = async () => {\n        const trimmedInput = userInput.trim();\n        if (trimmedInput) {\n            addMessage(trimmedInput, 'user');\n            setUserInput('');\n\n            try {\n                const botResponse = await getBotResponse(trimmedInput);\n                addMessage(botResponse, 'bot');\n            } catch (error) {\n                addMessage(\"[Erro]\", 'bot');\n            }\n        }\n    };\n\n    const addMessage = (content, sender) => {\n        setMessages(prevMessages => [...prevMessages, { content, sender }]);\n    };\n\n    const getBotResponse = async (userMessage) => {\n        const flowIdOrName = '68344e2d-b57a-4992-b172-214aca3fcaa1';\n        const langflowId = 'efde00ae-4d32-4471-8e8d-26482560f5a9';\n        const inputType = 'chat';\n        const outputType = 'chat';\n        const stream = false; // Defina como false se você não precisar de streaming\n\n        const tweaks = {}; // Ajuste os tweaks conforme necessário\n\n        const response = await langflowClient.runFlow(\n            flowIdOrName,\n            langflowId,\n            userMessage,\n            inputType,\n            outputType,\n            tweaks,\n            stream\n        );\n\n        if (response && response.outputs) {\n            const flowOutputs = response.outputs[0];\n            const firstComponentOutputs = flowOutputs.outputs[0];\n            return firstComponentOutputs.outputs.message.text;\n        }\n    };\n\n    return (\n        <div>\n            <div id=\"chat-box\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n                {messages.map((msg, index) => (\n                    <div key={index} className={msg.sender}>\n                        {msg.content}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={userInput}\n                onChange={(e) => setUserInput(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n            />\n            <button onClick={handleSend}>Enviar</button>\n        </div>\n    );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}