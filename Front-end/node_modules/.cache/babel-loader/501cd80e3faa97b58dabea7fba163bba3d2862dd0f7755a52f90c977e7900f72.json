{"ast":null,"code":"var _jsxFileName = \"/Users/davidpessoa/Documents/Faculdade/Lab. Engenharia de Software/ProjectTemis/Front-end/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LangflowClient from './LangflowClient';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([{\n    message: \"Olá! Testando...\",\n    user: \"SamsAI\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      user: \"user\",\n      direction: \"outgoing\"\n    };\n  };\n  const newMessages = [...messages, newMessage]; //Todas as mensagens antigas + a nova mensagem enviada\n\n  //Atualiza o status da mensagem\n  setMessages(newMessages);\n\n  //Processa a mensagem (envia e exibe a resposta)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          children: messages.map((message, i) => {\n            return /*#__PURE__*/_jsxDEV(Message, {\n              model: message\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          placeholder: \"Escreva uma mensagem...\",\n          onSend: ha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"gLkkrGEjGhDrCae+8NYb0OHNp80=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","LangflowClient","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","message","user","handleSend","newMessage","direction","newMessages","children","map","i","model","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onSend","ha","_c","$RefreshReg$"],"sources":["/Users/davidpessoa/Documents/Faculdade/Lab. Engenharia de Software/ProjectTemis/Front-end/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport LangflowClient from './LangflowClient';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nfunction Chat() {\n    const [messages, setMessages] = useState([\n        {\n            message: \"Olá! Testando...\",\n            user: \"SamsAI\",\n        }\n    ])\n\n    const handleSend = async (message) => {\n        const newMessage = {\n            message: message,\n            user: \"user\",\n            direction: \"outgoing\",\n        }\n    }\n\n    const newMessages = [...messages, newMessage]; //Todas as mensagens antigas + a nova mensagem enviada\n\n    //Atualiza o status da mensagem\n    setMessages(newMessages);\n\n    //Processa a mensagem (envia e exibe a resposta)\n\n    return (\n        <div>\n            <MainContainer>\n                <ChatContainer>\n                    <MessageList>\n                        {messages.map((message, i) => {\n                            return <Message key = {i} model = {message}/>\n                        })}\n                    </MessageList>\n                    <MessageInput placeholder='Escreva uma mensagem...' onSend={ha}/>\n                </ChatContainer>\n            </MainContainer>\n        </div>\n    );\n}\n\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,2DAA2D;AAClE,SAASC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjI,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CACrC;IACIc,OAAO,EAAE,kBAAkB;IAC3BC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAOF,OAAO,IAAK;IAClC,MAAMG,UAAU,GAAG;MACfH,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAAE,MAAM;MACZG,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EAED,MAAMC,WAAW,GAAG,CAAC,GAAGP,QAAQ,EAAEK,UAAU,CAAC,CAAC,CAAC;;EAE/C;EACAJ,WAAW,CAACM,WAAW,CAAC;;EAExB;;EAEA,oBACIV,OAAA;IAAAW,QAAA,eACIX,OAAA,CAACP,aAAa;MAAAkB,QAAA,eACVX,OAAA,CAACN,aAAa;QAAAiB,QAAA,gBACVX,OAAA,CAACL,WAAW;UAAAgB,QAAA,EACPR,QAAQ,CAACS,GAAG,CAAC,CAACP,OAAO,EAAEQ,CAAC,KAAK;YAC1B,oBAAOb,OAAA,CAACJ,OAAO;cAAWkB,KAAK,EAAIT;YAAQ,GAApBQ,CAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoB,CAAC;UACjD,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,eACdlB,OAAA,CAACH,YAAY;UAACsB,WAAW,EAAC,yBAAyB;UAACC,MAAM,EAAEC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd;AAAChB,EAAA,CArCQD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}